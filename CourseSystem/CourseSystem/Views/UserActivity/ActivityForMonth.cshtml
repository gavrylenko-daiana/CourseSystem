@model List<UserActivity>
@{
    var Month = new List<string>()
    {
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
    };

    var date = (DateTime)ViewData["DateTime"];
}

<!DOCTYPE html>
<html>
<head>
    <title>User activity</title>
    <!-- Add these lines to your <head> section -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <style>
        .activity-calendar-day-block{
            width:100%;
            height:9vh;
            padding:10%;
            margin: 5px 0;
            color: black !important;
        }

        .calendar-container{
            position:absolute;
            top:50%;
            left:50%;
            transform: translate(-50%, -50%);
            margin-left: 55px;
            width: 60vw;
        }

        .calendar-container .card-header{
            background-color:#12302a;
            color: white;
            padding: 20px;
        }

        .activity-block-count-bar{
            margin-top:1vh;
        }

    </style>
</head>
<body>
@if (TempData["Error"] != null)
{
    <div class="col-md-12 alert alert-danger">
        <span><b>Sorry!</b> - @TempData["Error"]</span>
    </div>
}
<div class="card calendar-container">
    <div class="card-header text-center">
        <h3>Activity in @Month[((DateTime)ViewData["DateTime"]).Month - 1] of @(((DateTime)ViewData["DateTime"]).Year) </h3>
        @{
            var dateTime = date.AddMonths(-1);
        }
        <a class="link-light" style="margin-right:35%; text-decoration:none;" href="@Url.Action("ActivityForMonth", "UserActivity", new { dateTime })">
            <i class="angle left icon"></i> @Month[dateTime.Month - 1]
        </a>
        @{
            dateTime = date.AddMonths(1);
        }
        <a class="link-light" style="margin-left:35%; text-decoration:none;" href="@Url.Action("ActivityForMonth", "UserActivity", new { dateTime })">
            @Month[dateTime.Month - 1] <i class="angle right icon"></i>
        </a>
    </div>
    <div class="card-body">
        <div class="container text-center">
            <div class="row align-items-center">
                <div class="col">
                    Sun
                </div>
                <div class="col">
                    Mon
                </div>
                <div class="col">
                    Tue
                </div>
                <div class="col">
                    Wen
                </div>
                <div class="col">
                    Thu
                </div>
                <div class="col">
                    Fri
                </div>
                <div class="col">
                    Sat
                </div>
            </div>
            <div class="row align-items-center">
                @{
                    var thisDay = new DateTime(date.Year, date.Month, 1);
                    var lastDay = thisDay.AddMonths(1).AddDays(-1);
                    for (var i = 0; i < (int)thisDay.DayOfWeek; i++)
                    {
                        <div class="col"></div>
                    }
                    var targetMonth = date.Month;
                    while (thisDay.Month == targetMonth)
                    {
                        <div class="col">
                            <a class="activity-calendar-day-block btn btn-outline-light" href="@Url.Action("ActivityForDay", "UserActivity", new { thisDay })">
                                <b>@thisDay.Day.ToString()</b>
                                @if (Model.Where(a => a.Created.Day == thisDay.Day).ToList().Any())
                                {
                                    var todayActivities = Model.Where(a => a.Created.Day == thisDay.Day).ToList();
                                    string titleText = null;
                                    @if (todayActivities.Count == 1)
                                    {
                                        titleText = "1 activity";
                                    }
                                    else
                                    {
                                        titleText = $"{todayActivities.Count} activities";
                                    }
                                    <div class="activity-block-count-bar" data-bs-toggle="tooltip" data-bs-placement="top" title="@titleText on @thisDay.ToString("D")">
                                        <i class="circle icon olive tiny"></i>
                                        @if (todayActivities.Count >= 2)
                                        {
                                            <i class="circle icon green tiny"></i>
                                        }
                                        @if (todayActivities.Count > 5)
                                        {
                                            <i class="circle icon teal tiny"></i>
                                        }
                                    </div>
                                }
                            </a>
                        </div>

                        if (thisDay.DayOfWeek == DayOfWeek.Saturday)
                        {
                            @:</div>
                            @:<div class="row align-items-center">
                        }

                        thisDay = thisDay.AddDays(1);
                    }
                    while (thisDay.DayOfWeek != DayOfWeek.Sunday)
                    {
                        <div class="col"></div>
                        thisDay = thisDay.AddDays(1);
                    }
                }
            </div>
            <div class="row align-items-center">
                <div class="col">
                    <i class="circle icon olive tiny"></i> - 1 activity
                </div>
                <div class="col">
                    <i class="circle icon olive tiny"></i><i class="circle icon green tiny"></i> - 2-5 activities
                </div>
                <div class="col">
                    <i class="circle icon olive tiny"></i><i class="circle icon green tiny"></i><i class="circle icon teal tiny"></i> - 6+ activities
                </div>
            </div>
        </div>
    </div>
  </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl, {
            placement: 'top', 
            container: 'body', 
        });
    });
  </script>
</body>
<div style="margin-top: 600px">
</div>
</html>