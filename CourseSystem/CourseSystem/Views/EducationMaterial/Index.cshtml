@using Core.Models;
@using Core.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<EducationMaterial>

@{
    var imageUrl = "https://dl.dropboxusercontent.com/scl/fi/2rpwtlic6wx4gkhho8kvj/EducationalMaterialFile.jpg?rlkey=yugu0ngw0cc5cpqs3tctcd74c&raw=1";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Your Page Title</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f7f7f7;
        }

        .cover-card:hover {
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            border: #4682B4 1px solid;
        }

        .ui.container {
            margin-top: 20px;
        }

        .add-course-button {
            margin-top: 20px;
            text-align: center;
        }
        
        .cover-card {
            height: 200px; 
        }        
        
        #fixedPagination {
             margin-top: 228px;
        }
    </style>
</head>
<body>

<div class="ui container">
    <div style="display: flex; align-items: center;">
        <h3 style="margin-right: auto;">Educational Materials</h3>

        <div class="ui search" style="text-align: center; flex-grow: 1;">
            <form method="get" asp-action="IndexMaterials" asp-controller="EducationMaterial" class="ui form inline">
                <div class="ui icon input">
                    <input type="hidden" id="materialIds" name="materialIds" value="@ViewBag.MaterialIds"/>
                    <input type="hidden" id="sortOrder" name="sortOrder" value="@ViewBag.CurrentSort"/>
                    <input type="text" name="currentQueryFilter" placeholder="Search..." style="border-radius: 15px; margin-right: 10px;"/>
                    <button type="submit" style="background: none; border: none; padding: 0;">
                        <i class="inverted circular search link icon"></i>
                    </button>
                </div>
            </form>
        </div>

        <div class="ui compact menu">
            <div class="ui simple dropdown item">
                Sort by
                <i class="dropdown icon"></i>
                <div class="menu">
                    <div class="item">
                        @if (ViewBag.NameSortParam == SortingParam.UploadTime)
                        {
                            <a asp-controller="EducationMaterial" asp-action="IndexMaterials" asp-route-materialIds="@ViewBag.MaterialIds" asp-route-sortOrder="@ViewBag.NameSortParam"><i class="fa fa-arrow-down" aria-hidden="true"></i> Recent</a>
                        }
                        else
                        {
                            <a asp-controller="EducationMaterial" asp-action="IndexMaterials" asp-route-materialIds="@ViewBag.MaterialIds" asp-route-sortOrder="@ViewBag.NameSortParam"><i class="fa fa-arrow-up" aria-hidden="true"></i> Recent</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <hr class="ui divider">
    <div class="ui stackable four column grid">
        @if (Model.Count == 0)
        {
            <div class="column">
                <div class="ui warning message">No educational materials found.</div>
            </div>
        }
        else
        {
            @foreach (var file in Model)
            {
                <div class="column">
                    <div class="ui card cover-card">
                        <div class="content">
                            <p>@file.UploadTime.ToString("g")</p>
                        </div>
                        <div class="content" style="display: flex; justify-content: space-between; align-items: flex-end;">
                            <h7 class="header" style="margin-right: auto;">@((file.Name.Length > 17) ? $"{file.Name.Substring(0, 15)}..." : file.Name)</h7>
                            <img src="@imageUrl" alt="Image" style="height: 60px; align-self: flex-start;">
                        </div>

                        <div class="extra content">
                            @if (User.Identity.IsAuthenticated && User.IsInRole(AppUserRoles.Admin.ToString()))
                            {
                                <div class="ui buttons">
                                    <a class="ui delete-button button" asp-controller="EducationMaterial" asp-action="Delete" asp-route-id="@file.Id">Delete</a>
                                </div>
                            }
                            <div class="ui buttons">
                                <a class="ui details-button button" asp-controller="EducationMaterial" asp-action="Detail" asp-route-id="@file.Id">Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    <div class="ui container add-course-button" style="display: flex; justify-content: center; align-items: center;">
        @if (Model.PageCount > 1)
        {
            if (Model.Count <= Model.PageSize / 2)
            {
                <div id="fixedPagination" class="pagination-container">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    <div>
                        @Html.PagedListPager((IPagedList)Model, page => Url.Action("IndexMaterials", new { materialIds = ViewBag.MaterialIds, page = page, sortOrder = ViewBag.CurrentSort, currentQueryFilter = ViewBag.CurrentQueryFilter }),
                            new PagedListRenderOptions
                            {
                                LiElementClasses = new string[] { "page-item" },
                                PageClasses = new string[] { "page-link" },
                                MaximumPageNumbersToDisplay = 3
                            })
                    </div>
                </div>
            }
            else
            {
                <div class="pagination-container">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    <div>
                        @Html.PagedListPager((IPagedList)Model, page => Url.Action("IndexMaterials", new { materialIds = ViewBag.MaterialIds, page = page, sortOrder = ViewBag.CurrentSort, currentQueryFilter = ViewBag.CurrentQueryFilter }),
                            new PagedListRenderOptions
                            {
                                LiElementClasses = new string[] { "page-item" },
                                PageClasses = new string[] { "page-link" },
                                MaximumPageNumbersToDisplay = 3
                            })
                    </div>
                </div>
            }
        }
    </div>
</div>

@if (TempData["Error"] != null)
{
    <div class="ui negative message">
        <p><b>Sorry!</b> - @TempData["Error"]</p>
    </div>
}

</body>
</html>