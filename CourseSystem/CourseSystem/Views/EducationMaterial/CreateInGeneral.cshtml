@using UI.ViewModels;
@using Core.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BLL.Interfaces
@model CreateInGeneralEducationMaterialViewModel
@inject IUserService UserService

@{
    var currentUser = (await UserService.GetCurrentUser(User)).Data;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.js"></script>
</head>
<body>
<div class="ui container" style="margin-top: 20px;">
    <div class="ui centered card" style="width: 400px;">
        <div class="content">
            <div class="header">
                Upload General File
            </div>
        </div>
        <div class="content">
            <form method="post" asp-controller="EducationMaterial" asp-action="CreateInGeneral" enctype="multipart/form-data" class="ui form">
                <input type="hidden" asp-for="TimeUploaded" value="@DateTime.Now">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <!-- File Upload Input -->
                <div class="field">
                    <label asp-for="UploadFile">Select File:</label>
                    <input asp-for="UploadFile" type="file" class="form-control">
                    <span asp-validation-for="UploadFile" class="text-danger"></span>
                </div>
                <div class="field">
                    <label asp-for="MaterialAccess" class="control-label"></label>
                    <select id="materialAccessSelect" asp-for="MaterialAccess" class="form-control">
                        @if (Model.Courses?.Any() != true)
                        {
                            <option class="item" value="@MaterialAccess.General">@MaterialAccess.General</option>
                        }
                        else if (Model.Groups?.Any() != true)
                        {
                            <option class="item" value="@MaterialAccess.General">@MaterialAccess.General</option>
                            <option class="item" value="@MaterialAccess.Course">@MaterialAccess.Course</option>
                        }
                        else
                        {
                            @foreach (var accessValue in Enum.GetValues(typeof(MaterialAccess)))
                            {
                                <option class="item" value="@accessValue"> @accessValue </option>
                            }
                        }
                    </select>
                    <span asp-validation-for="MaterialAccess" class="text-danger"></span>
                </div>
        
                <div class="form-group" id="groupDropdown" style="display:none;">
                    <label asp-for="SelectedGroupId" class="control-label">Select Group</label>
                    <div class="ui fluid search selection dropdown">
                        <input type="hidden" asp-for="SelectedGroupId">
                        <i class="dropdown icon"></i>
                        <div class="default text">Select Group</div>
                        <div class="menu">
                            @if (Model.Groups?.Any() == true)
                            {
                                foreach (var group in Model.Groups)
                                {
                                    foreach (var userGroup in currentUser.UserGroups.Where(ug => ug.Group != null && ug.GroupId == group.Id))
                                    {
                                        <div class="item" data-value="@userGroup.GroupId">@userGroup.Group.Name</div>
                                    }
                                }
                            }
                            else
                            {
                                <div class="disabled item">No groups available</div>
                            }
                        </div>
                    </div>
                    <span asp-validation-for="SelectedGroupId" class="text-danger"></span>
                </div>
        
                <div class="form-group" id="courseDropdown" style="display:none;">
                    <label asp-for="SelectedCourseId" class="control-label">Select Course</label>
                    <div class="ui fluid search selection dropdown">
                        <input type="hidden" asp-for="SelectedCourseId">
                        <i class="dropdown icon"></i>
                        <div class="default text">Select Course</div>
                        <div class="menu">
                            @if (Model.Courses?.Any() == true)
                            {
                                foreach (var course in Model.Courses)
                                {
                                    foreach (var userCourse in currentUser.UserCourses.Where(ug => ug.Course != null && ug.CourseId == course.Id))
                                    {
                                        <div class="item" data-value="@userCourse.CourseId">@userCourse.Course.Name</div>
                                    }
                                }
                            }
                            else
                            {
                                <div class="disabled item">No courses available</div>
                            }
                        </div>
                    </div>
                    <span asp-validation-for="SelectedCourseId" class="text-danger"></span>
                </div>
                
                <!-- Submit Button -->
                <div class="field" style="margin-top: 10px;">
                    <div class="col" style="display: inline-block;">
                        <input class="ui create-button button" type="submit" value="Upload"/>
                    </div>
                    <div class="col" style="display: inline-block;">
                        <a asp-controller="Course" asp-action="Index" class="ui button">Cancel</a>
                    </div>
                </div>
            </form>        
        </div>
    </div>
</div>

@if (TempData["Error"] != null)
{
    <div class="ui negative message">
        <p><b>Sorry!</b> - @TempData["Error"]</p>
    </div>
}

<script>
    const materialAccessSelect = document.querySelector("#materialAccessSelect");
    const groupDropdown = document.querySelector("#groupDropdown");
    const courseDropdown = document.querySelector("#courseDropdown");

    materialAccessSelect.addEventListener("change", function () {
        if (materialAccessSelect.value === "Group") {
            groupDropdown.style.display = "block";
            courseDropdown.style.display = "none";
        } else if (materialAccessSelect.value === "Course") {
            groupDropdown.style.display = "none";
            courseDropdown.style.display = "block";
        } else {
            groupDropdown.style.display = "none";
            courseDropdown.style.display = "none";
        }
    });
    
    $('.ui.dropdown').dropdown();
</script>

</body>
</html>