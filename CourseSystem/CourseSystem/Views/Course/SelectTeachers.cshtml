@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using System.Web;
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<UI.ViewModels.TeacherViewModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Your Page Title</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f7f7f7;
        }

        .cover-card:hover {
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            border: #4682B4 1px solid;
        }

        .ui.container {
            margin-top: 20px;
        }

        .add-course-button {
            margin-top: 20px;
            text-align: center;
        }
        
        .cover-card {
            height: 110px; 
        }     
        
        #fixedPagination {
            margin-top: 138px;
        }        
    </style>
</head>
<body>
@if (TempData["Error"] != null)
{
    <div class="ui container">
        <div class="ui negative message">
            <span>@TempData["Error"]</span>
        </div>
    </div>
}
<div class="ui container">
    <h3 class="ui header">Invite teachers:</h3>
    <div style="flex-grow: 1; text-align: center;">
        <div class="ui search" style="margin-right: 10px;">
            <form method="get" asp-action="SelectTeachers" asp-controller="Course" class="ui form inline">
                <div class="ui icon input">
                    <input type="hidden" id="courseId" name="courseId" value="@ViewBag.SelectTeachersCourseId"/>
                    <input type="text" name="searchQuery" placeholder="Search..." style="border-radius: 15px; margin-right: 10px;"/>
                    <button type="submit" style="background: none; border: none; padding: 0;">
                        <i class="inverted circular search link icon"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <hr class="ui divider">
    <div class="ui stackable three column grid">
        @if (!Model.Any())
        {
            <div class="column">
                <div class="ui warning message">No teachers found.</div>
            </div>
        }
        else
        {
            @foreach (var teacher in Model)
            {
                <div class="column">
                    <a href="@Url.Action("Detail", "User", new { id = teacher.Id })"> 
                        <div class="ui card cover-card">
                            <div class="content" style="display: flex; flex-direction: column; justify-content: center;">
                                <div class="header">
                                    @if (teacher.ProfileImage != null)
                                    {
                                        <img src="@teacher.ProfileImage.Url" alt="@teacher.ProfileImage.Name" class="rounded-circle img-fluid" style="width: 30px; height: 30px; margin-right: 1px;">
                                    }
                                    @teacher.FirstName @teacher.LastName
                                </div>
                                @if (teacher.IsInvited)
                                {
                                    <div style="margin-top: 10px; text-align: center;">
                                        <span class="ui mini message">Teacher added</span>
                                    </div>
                                }
                                else
                                {
                                    <div style="margin-top: 10px; text-align: center;">
                                        <form asp-action="SendInvitation" asp-controller="Course" method="post">
                                            <input type="hidden" name="teacherId" value="@teacher.Id"/>
                                            <input type="hidden" name="courseId" value="@teacher.CourseId"/>
                                            <button type="submit" class="ui details-button button">Send Invitation</button>
                                        </form>
                                    </div>
                                }
                            </div>
                        </div>
                    </a> 
                </div>
            }
        }
    </div>

</div>

<div class="ui container add-course-button" style="display: flex; justify-content: center; align-items: center;">
    @if (Model.PageCount > 1)
    {
        if (Model.Count <= Model.PageSize / 2)
        {
            <div id="fixedPagination" class="pagination-container">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                <div>
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("SelectTeachers", new { courseId = ViewBag.SelectTeachersCourseId, page = page, currentQueryFilter = ViewBag.CurrentQueryFilter }),
                        new PagedListRenderOptions
                        {
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" },
                            MaximumPageNumbersToDisplay = 3
                        })
                </div>
            </div>
        }
        else
        {
            <div class="pagination-container">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                <div>
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("SelectTeachers", new { courseId = ViewBag.SelectTeachersCourseId, page = page, currentQueryFilter = ViewBag.CurrentQueryFilter }),
                        new PagedListRenderOptions
                        {
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" },
                            MaximumPageNumbersToDisplay = 3
                        })
                </div>
            </div>
        }
    }
</div>
<script>
</script>
</body>
</html>