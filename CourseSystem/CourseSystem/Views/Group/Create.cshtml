@model UI.ViewModels.GroupViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Create Course</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <style>
        body {
            background-color: #f7f7f7;
        }
    </style>
</head>
<body>
<div class="ui container" style="margin-top: 20px;">
    <div class="ui centered card" style="width: 400px;">
        <div class="content">
            <div class="header">
                Create New Group
            </div>
        </div>
        <div class="content">
            @using (Html.BeginForm("Create", "Group", FormMethod.Post))
            {
                <input type="hidden" asp-for="Id"/>
                <input type="hidden" asp-for="CourseId"/>
                
                <div class="ui form">
                    <div class="field">
                        <label>@Html.LabelFor(model => model.Name)</label>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="field">
                        <label>@Html.LabelFor(model => model.StartDate)</label>
                        @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", type = "date", min = DateTime.Now.ToString("yyyy-MM-dd"), required = "required" })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="field">
                        <label>@Html.LabelFor(model => model.EndDate)</label>
                        @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", type = "date", min = DateTime.Now.ToString("yyyy-MM-dd"), required = "required" })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                    
                    @if (TempData["Error"] != null)
                    {
                        <div class="ui negative message">
                            <p><b>Sorry!</b> - @TempData["Error"]</p>
                        </div>
                    }

                    <button type="submit" class="ui create-button button">Create</button>
                    <a href="@Url.Action("Details", "Course", new { id = Model.CourseId })" class="ui button">Cancel</a>
                </div>
            }
        </div>
    </div>
</div>
</body>
</html>