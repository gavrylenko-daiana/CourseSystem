@using Core.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Text.Json
@using System.Text.Json.Serialization
@model UI.ViewModels.GroupViewModels.UserGroupViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Course Details</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <style>
        /*body {*/
        /*    background-color: #f7f7f7;*/
        /*}*/
            
        .cover-card:hover {
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            border: #4682B4 1px solid;
        }

        .user-list {
            list-style-type: none !important;
            padding: 0;
        }
        
        .user-item {
            display: flex;
            flex-direction: column;
            border: 1px solid #ccc;
            margin-bottom: 10px;
            padding: 10px;
        }     
        
        .user-details {
            display: flex;
            flex-direction: column;
            margin-right: 10px;
        }
        
        .ui.teal.basic.button {
            margin-left: auto;
        }
        
        .left-container {
            float: left;
            width: 70%; 
            padding: 0 10px; 
        }
        
        .right-container {
            float: right;
            width: 30%; 
            padding: 0 10px; 
        }
        
        .view-profile-button {
            width: 100%;
            text-align: center;
            white-space: nowrap;
            margin-top: 10px;   
        }
        
        .user-button {
            margin-top: auto;
        }
    </style>
</head>
<body>
<div class="ui container mt-4">
    <div class="ui centered raised card" style="width: 90%;">
        <div class="content">
            <div class="header">
                Group Details
            </div>
        </div>
        <div class="content">
            <div class="left-container">
                <h4 class="ui header">@Model.Group.Name</h4>
                <p>
                    <strong>Access:</strong> @Model.Group.GroupAccess
                </p>
                <p>
                    <strong>Start Date:</strong> @Model.Group.StartDate.ToString("dd/MM/yyyy")
                </p>
                <p>
                    <strong>End Date:</strong> @Model.Group.EndDate.ToString("dd/MM/yyyy")
                </p>
                <div>
                    <strong>Progress:</strong>
                    @Model.Progress%
                    <progress class="ui progress" max="100" value="@Model.Progress"></progress>
                </div>

                @{
                    var materialsGroup = Model.Group.EducationMaterials.Where(m => m.MaterialAccess is MaterialAccess.Group or MaterialAccess.General).ToList();
                    var materialIds = string.Join(" ", materialsGroup.Select(m => m.Id));
                }

                @if (Model.CurrentUser.Role != AppUserRoles.Student)
                {
                    <a href="@Url.Action("Edit", "Group", new { id = Model.Group.Id })" class="ui edit-button button">Edit Group</a>
                    <a href="@Url.Action("Delete", "Group", new { id = Model.Group.Id })" class="ui delete-button button">Delete Group</a>
                    <a class="ui black basic button mb-3" asp-controller="EducationMaterial" asp-action="CreateInGroup" asp-route-groupId="@Model.Group.Id">Upload education material</a>
                }

                <a class="ui black basic button" asp-controller="EducationMaterial" asp-action="IndexMaterials" asp-route-materialIds="@materialIds" asp-route-sortOrder="UploadTimeDesc">Education Materials</a>

            </div>

            <div class="right-container ui segment">
                    @if (Model.CurrentUser.Role != AppUserRoles.Student)
                    {
                        <a href="@Url.Action("SelectStudent", "Group", new { id = Model.Group.Id })" class="ui black basic button mb-3">Add student to group</a>
                        @if (Model.CurrentUser.Role == AppUserRoles.Admin)
                        {
                            <a href="@Url.Action("SelectTeachers", "Group", new { courseId = Model.Group.CourseId, groupId = Model.Group.Id })" class="ui black basic button">Add teacher to group</a>
                        }
                    }

                @if (Model.UserGroupsWithoutAdmins != null && Model.UserGroupsWithoutAdmins.Any())
                {
                    <h4 class="ui header">Users:</h4>
                    <ul class="ui user-list" style="overflow-y: auto; height: 400px; width: 275px">
                        @foreach (var userGroupsWithoutAdmin in Model.UserGroupsWithoutAdmins)
                        {
                            <li class="user-item" style="display: flex; flex-direction: column; align-items: center;">
                                <div class="user-profile" style="display: flex; align-items: center;">
                                    <div class="user-details" style="display: flex; align-items: center;">
                                        @if (userGroupsWithoutAdmin.AppUser.ProfileImage != null)
                                        {
                                            <img src="@userGroupsWithoutAdmin.AppUser.ProfileImage.Url" alt="@userGroupsWithoutAdmin.AppUser.ProfileImage.Name" class="rounded-circle img-fluid" style="width: 30px; height: 30px; margin-right: 1px;">
                                        }
                                    </div>
                                    <div class="user-button" style="margin-left: auto;">
                                        <a href="@Url.Action("Detail", "User", new { id = userGroupsWithoutAdmin.AppUser.Id })" class="ui teal basic button view-profile-button" style="width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                                            @userGroupsWithoutAdmin.AppUser.FirstName @userGroupsWithoutAdmin.AppUser.LastName - @userGroupsWithoutAdmin.AppUser.Role
                                        </a>
                                    </div>
                                </div>
                                @if (Model.CurrentUser.Role == AppUserRoles.Admin)
                                {
                                    <a href="@Url.Action("DeleteUserFromGroup", "Group", new { groupId = Model.Group.Id, userId = userGroupsWithoutAdmin.AppUser.Id})" class="ui red" style="margin-top: auto;">Delete user</a>
                                }
                            </li>
                        }
                    </ul>
                }

                else
                {
                    <div class="ui warning message">
                        <p>User was not found for this group.</p>
                    </div>
                }
            </div>
        </div>
        <br/>
        @if (Model.Group.GroupAccess == GroupAccess.InProgress)
        {
            <div>
                <a href="@Url.Action("Index", "Assignment", new { groupId = Model.Group.Id })" class="ui teal basic button view-profile-button">All assignments</a>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="col-md-12 alert alert-danger">
                <span><b>Sorry!</b> - @TempData["Error"]</span>
            </div>
        }
    </div>
</div>
</body>