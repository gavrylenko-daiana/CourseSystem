@using UI.ViewModels
@using Core.Enums
@using Westwind.AspNetCore.Markdown;
@using UI.ViewModels.AssignmentViewModels;
@model DetailsAssignmentViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Assignments</title>
    <!-- Add Bootstrap CSS link here -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Add Font Awesome CSS -->
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <style>
      #chat-card
        {
            max-height: 70vh;
            overflow: auto;
        }

        .card {
            position: relative;
            display: flex;
            flex-direction: column;
            min-width: 0;
            word-wrap: break-word;
            background-color: #fff;
            background-clip: border-box;
            border: 0 solid rgba(0,0,0,.125);
            border-radius: 1rem;
            box-shadow: 0 20px 27px 0 rgb(0 0 0 / 5%);
        }

        .text-reset {
            --bs-text-opacity: 1;
            color: inherit !important;
        }

        a {
            color: #5465ff;
            text-decoration: none;
        }        
            
        .cover-card:hover {
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            border: #4682B4 1px solid;
        }

        .user-list {
            list-style-type: none !important;
            padding: 0;
        }
        
        .user-item {
        display: flex;
                    flex-direction: column;
            border: 1px solid #ccc;
            margin-bottom: 10px;
            padding: 10px;
        }

        .user-details {
            display: flex;
            flex-direction: column;
            margin-right: 10px;
        }
        
        .ui.teal.basic.button {
            margin-left: auto;
        }
        
        .left-container {
            float: left;
            width: 70%; 
            padding: 0 10px; 
        }
        
        .right-container {
            float: right;
            width: 30%; 
            padding: 0 10px; 
        }
        
        .view-profile-button {
            width: 100%;
            text-align: center;
            white-space: nowrap;
            margin-top: 10px;   
        }
        
        .user-button {
            margin-top: auto;
        }
        
        .border-container {
            border-radius: 10px;
        }
    </style>
</head>
<body>
<div class="ui container mt-4">
    <div class="ui container center aligned">
        <div class="ui centered raised card" style="width: 100%;">
            <div class="content">
                <div class="header">
                    Assignment Details
                </div>
            </div>
        </div>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="ui negative message">
            <p><b>Sorry!</b> - @TempData["Error"]</p>
        </div>
    }

    <div class="ui container py-3">
        <h2 class="ui header">@Model.Name</h2>
    </div>

    <!-- Main content -->
    <div class="row">
        <div class="col-lg-8">
            <!-- Details -->
            <div class="card mb-4">
                <div class="card-body border-container">
                    <div class="mb-3 d-flex justify-content-between">
                        <div>
                            <div class="me-3">Start Date: @Model.StartDate.ToString("dddd, dd MMMM yyyy HH:mm")</div>
                            <hr>
                            <div class="me-3">End Date: @Model.EndDate.ToString("dddd, dd MMMM yyyy HH:mm")</div>
                            <hr>
                        </div>
                        @if (User.IsInRole(AppUserRoles.Teacher.ToString()))
                        {
                            <div class="d-inline-block">
                                <div class="ui buttons">
                                    <a href="@Url.Action("Edit", "Assignment", new { id = @Model.Id })" class="ui edit-button button">
                                        Edit
                                    </a>
                                    <div class="or"></div>
                                    <a href="@Url.Action("Delete", "Assignment", new { assignmentId = @Model.Id })" class="ui delete-button button">
                                        Delete
                                    </a>
                                </div>

                                <a href="@Url.Action("SeeStudentAnswers", "AssignmentAnswer", new { assignmentId = Model.Id })" class="ui details-button button">
                                    See all student answers
                                </a>
                            </div>
                        }
                        @if (User.IsInRole(AppUserRoles.Student.ToString()))
                        {
                            <div class="d-inline-block">
                                @if (Model.UserAssignment != null && Model.UserAssignment.IsChecked)
                                {
                                    <div class="badge rounded-pill bg-info">Grade: @Model.UserAssignment?.Grade</div>
                                }
                                else
                                {
                                    @if (Model.AssignmentAccess == AssignmentAccess.Planned)
                                    {
                                        <div class="inline-icon">
                                            <i class="fa fa-times" aria-hidden="true"></i> Access denied
                                        </div>
                                    }
                                    else if (Model.AssignmentAccess == AssignmentAccess.InProgress)
                                    {
                                        <a href="@Url.Action("Create", "AssignmentAnswer", new { id = Model.Id })" class="ui details-button button">
                                            Add answer
                                        </a>
                                    }
                                    else
                                    {
                                        <div class="inline-icon">
                                            <i class="fa fa-hourglass" aria-hidden="true"></i> Wait for grade
                                        </div>
                                    }
                                }
                            </div>
                        }
                    </div>
                    @if (Model.Description != null)
                    {
                        <!-- Customer Notes -->
                        <div class="card mb-4">
                            <div class="card-body">
                                <h3 class="h6">Description</h3>
                                <div>@Markdown.ParseHtmlString(Model.Description)</div>
                            </div>
                        </div>
                    }
                    <hr/>
                    @if (Model.AssignmentFiles.Any())
                    {
                        <h4>Attached files for assignment:</h4>
                        <table class="ui celled table">
                            <thead>
                            <tr>
                                <th>Assignment attached files:</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var assignmentFile in Model.AssignmentFiles)
                            {
                                <tr>
                                    <td>
                                        <div class="ui items">
                                            <div class="item">
                                                <div class="content" style="display: flex; align-items: center;">
                                                    <a class="ui small header" href="@Url.Action("Index", "AssignmentFile", new { fileId = assignmentFile.Id })">@assignmentFile.Name</a>
                                                    @if (User.IsInRole(AppUserRoles.Teacher.ToString()))
                                                    {
                                                        <div style="margin-left: auto;">
                                                            <a class="ui small header" href="@Url.Action("Delete", "AssignmentFile", new { fileId = assignmentFile.Id, assignmentId = Model.Id })" style="color: black; text-decoration: none;">
                                                                <span style="color: #DA465D;">Delete</span>
                                                            </a>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="ui message">
                            <p>No attached files</p>
                        </div>
                    }

                </div>
            </div>
            <hr/>
            <div class="col-lg-4">

                @if (Model.AssignmentAnswers.Any() && User.IsInRole("Student"))
                {
                    <h4>Your answer:</h4>
                    foreach (var assignmnetAnswer in Model.AssignmentAnswers)
                    {
                        <div class="card-body">
                            <div class="d-inline-block">
                                @if (Model.UserAssignment != null && !Model.UserAssignment.IsChecked)
                                {
                                    <a href="@Url.Action("Index", "AssignmentAnswer", new { fileId = assignmnetAnswer.Id })">@assignmnetAnswer.Name</a>
                                    <li>@assignmnetAnswer.Text</li>
                                    <a href="@Url.Action("Delete", "AssignmentAnswer", new { assignmentAnswerId = @assignmnetAnswer.Id })" class="ui delete-button button">
                                        Delete
                                    </a>
                                }
                            </div>
                            <hr>
                        </div>
                    }
                }
                else if (User.IsInRole("Student"))
                {
                    <div class="ui warning message">
                        <p>No answers found for this assignment.</p>
                    </div>
                }
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <p>Chat</p>
                </div>
                <div class="card-body" id="chat-card">
                    @await Html.PartialAsync("~/Views/Chat/_Chat.cshtml", new AssignmentChatViewModel { Id = Model.Id, ChatMessages = Model.ChatMessages })
                </div>
            </div>
        </div>
    </div>
</div>
</body>
</html>